{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"IVIM_fit","text":"<p>Preprocessing diffusion MRI data and fitting IVIM models</p>"},{"location":"#how-to-use-locally","title":"How to use locally:","text":"<ol> <li>Clone the repository with <code>git clone</code> and <code>cd</code> into it. You should see a <code>run.py</code> file there. <pre><code>git clone https://github.com/PostonLab/IVIM_fit.git\n</code></pre> <pre><code>cd ivim_fit\n</code></pre></li> <li>Install poetry using <code>pip install poetry</code> <pre><code>pip install poetry\n</code></pre></li> <li>Install dependencies with <code>poetry install</code>, then use <code>poetry shell</code> to activate the virtual environment. <pre><code>poetry install\n</code></pre> <pre><code>poetry shell\n</code></pre></li> <li>First run the workflow dry-run with python <code>./run.py &lt;path to bids data&gt; &lt;path to output&gt; participant -np</code>. <pre><code>./run.py &lt;insert path to your bids data&gt; &lt;insert path to your output&gt; participant -np\n</code></pre></li> <li>If the dry run is successful, we can run the workflow with <code>python ./run.py &lt;path to bids data&gt; &lt;path to output&gt; participant -c all --use-singularity</code>. Where <code>-c</code> is for number of cores you want to use. <code>all</code> will use everything available. <pre><code>python ./run.py &lt;path to bids data&gt; &lt;path to output&gt; participant -c all --use-singularity\n</code></pre></li> <li>When running for the first time, it will install all the singularity containers.</li> </ol>"},{"location":"#how-to-run-in-sherlock-cluster-at-stanford","title":"How to run in Sherlock cluster at Stanford:","text":"<ol> <li>Activate an interractive shell using <code>salloc</code> <pre><code>salloc\n</code></pre></li> <li>Load python3 using <code>ml python/3.9.0</code> <pre><code>ml python/3.9.0\n</code></pre></li> <li>Create a python environment <code>python3.9 -m venv py3</code> <pre><code>python3.9 -m venv py3\n</code></pre></li> <li>Activate the environment <code>source py3/bin/activate</code> <pre><code>source py3/bin/activate\n</code></pre></li> <li>Install dependencies with <code>poetry install</code>.(If poetry is not installed, install it using <code>python3 -m pip install poetry==1.8.5</code>. If needed install six package using <code>python3 -m pip install six</code>) <pre><code>poetry install\n</code></pre> If poetry not already installed:<pre><code>python3 -m pip install poetry==1.8.5\n</code></pre></li> <li>Deactivate the existing python environment using <code>deactivate</code>. Then use <code>poetry shell</code> to activate the new ivim virtual environment. <pre><code>deactivate\n</code></pre> <pre><code>poetry shell\n</code></pre></li> <li>Navigate to <code>ivim_fit</code> directory using <code>cd ivim_fit</code> where you will see the <code>run.py</code> file. <pre><code>cd ivim_fit\n</code></pre></li> <li>First run the workflow dry-run with <code>python ./run.py &lt;path to bids data&gt; &lt;path to output&gt; participant -np</code>. <pre><code>python ./run.py &lt;path to bids data&gt; &lt;path to output&gt; participant -np\n</code></pre></li> <li>If the dry run is successful, we can run the workflow with <code>python ./run.py &lt;path to bids data&gt; &lt;path to output&gt; participant -c all --use-singularity</code>. Where <code>-c</code> is for number of cores you want to use. <code>all</code> will use everything available. <pre><code>python ./run.py &lt;path to bids data&gt; &lt;path to output&gt; participant -c all --use-singularity\n</code></pre></li> <li>If running again, first load python 3.9 using <code>ml python/3.9.0</code>, and then run <code>poetry shell</code> to activae the python environment. <pre><code>ml python/3.9.0\n</code></pre> <pre><code>poetry shell\n</code></pre></li> </ol>"},{"location":"#how-to-contribute","title":"How to contribute:","text":"<ol> <li>Clone the repository with <code>git clone https://github.com/PostonLab/IVIM_fit.git</code> <pre><code>git clone https://github.com/PostonLab/IVIM_fit.git\n</code></pre></li> <li>Checkout a branch and make changes.</li> <li>Before doing <code>git add .</code>, run <code>poe quality</code>. This will automatically run formatting and make necessary changes.</li> <li>If everything looks pretty, proceed with pushing changes.</li> <li>Go to github and make a pull request for your changes.</li> </ol>"},{"location":"#acknowledgement","title":"Acknowledgement","text":"<p>This project utilizes code adapted from the snakedwi pipeline ([https://github.com/akhanf/snakedwi]), an open-source project for diffusion MRI preprocessing. Their work provided a valuable foundation for building the preprocessing steps of IVIM_fit pipeline.</p>"}]}